const int N_R1 = 8;
const int N_R2 = 8;
const int N_R3 = 2;
const int N_tau = 100;
const int N_traj = 1000;
const int N_md = 40;
const int N_sample = 100;
const int N_interval = 10;
const int N_iter = 10000;
const int REAL = 0;
const int IMAG = 1;
const int ROOT = 0;
const double beta = 10.0;
const double t = 1.0;
const double U = 1.0;
const double lam = 0.0;
const double mu = 0.0;
const double dt = 0.001;
const double Accuracy = 1e-14;

const int TOT = N_R1*N_R2*N_tau*N_R3;
const int SPACE = N_R1*N_R2*N_R3;
const double Omega0 = 2*Pi/double(N_tau);
const double Omega1 = 2*Pi/double(N_R1); //for fourier transform
const double Omega2 = 2*Pi/double(N_R2);
const double Phase = Pi/double(N_tau);
const double a_t = beta/N_tau;
const double t_hat = a_t*t;
const double U_hat = a_t*U;
const double lam_hat = a_t*lam;
const double mu_hat = a_t*mu;
const double U_hat_sq = sqrt(U_hat);
const double Nor = sqrt(double(N_R1*N_R2));
const double NOR = sqrt(double(N_R1*N_R2*N_R3));
